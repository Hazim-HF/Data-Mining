library(arules)
bread = read.transactions('./Data/BreadBasket.csv', format = 'single', header = T,
sep = ',', cols = c('Transaction','Item'))
arules::inspect(arules::unique(head(bread)))
bread = arules::inspect(arules::unique(head(bread)))
library(arules)
bread = read.transactions('./Data/BreadBasket.csv', format = 'single', header = T,
sep = ',', cols = c('Transaction','Item'))
bread = arules::inspect(arules::unique(head(bread)))
#
itemFrequencyPlot(bread, topN = 10)
#
itemFrequencyPlot(bread, topN = 10)
#
itemFrequencyPlot(bread, topN = 10)
class(bread)
bread = arules::inspect(arules::unique(head(bread)))
library(arules)
bread = read.transactions('./Data/BreadBasket.csv', format = 'single', header = T,
sep = ',', cols = c('Transaction','Item'))
bread = arules::inspect(arules::unique(head(bread)))
library(arules)
bread = read.transactions('./Data/BreadBasket.csv', format = 'single', header = T,
sep = ',', cols = c('Transaction','Item'))
arules::inspect(arules::unique(head(bread)))
#
itemFrequencyPlot(bread, topN = 10)
rule = apriori(bread, parameter=list(supp=0.01, conf=0.2))
rule = apriori(bread, parameter=list(supp=0.01, conf=0.2),
appearance=list(default='rhs', lhs='yogurt'))
rule = apriori(bread, parameter=list(supp=0.01, conf=0.2),
appearance=list(default='rhs', lhs='Cofee'))
rule = apriori(bread, parameter=list(supp=0.01, conf=0.2),
appearance=list(default='rhs', lhs='Cofee'))
rule = apriori(bread, parameter=list(supp=0.01, conf=0.2),
appearance=list(default='rhs', lhs='Coffee'))
rule = apriori(bread, parameter=list(supp=0.01, conf=0.2),
appearance=list(default='lhs', rhs='Coffee'))
plot(rule, method = 'graph')
library(arulesViz)
plot(rule, method = 'graph')
plot(rule, method = 'paracoord')
plot(SpatialPoints(lonlat))
library(sp)
library(rspat)
crdref = CRS('+proj=longlat +datum=WGS84')
lonlat = cbind(reruang$Latitud, reruang$Longitud)
stesen = c('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H')
Latitud = c(45.3, 42.6, 38.9, 42.1, 35.7, 38.9, 36.2, 39)
Longitud = c(-116.7, -120.4, -116.7, -113.5, -115.5, 120.8, -119.5, -113.7)
Suhu = c(40.5, 32.1, 14.4, 40.1, 33.2, 27.4, 27.8, 31.3)
Jumlah.Hujan.Mingguan = c(184.85, 300.11, 3.53, 405.67, 94.78, 794.84, 154.67,
594.85)
reruang = data.frame(stesen, Latitud, Longitud, Suhu, Jumlah.Hujan.Mingguan)
head(reruang)
library(sp)
library(rspat)
crdref = CRS('+proj=longlat +datum=WGS84')
lonlat = cbind(reruang$Latitud, reruang$Longitud)
plot(SpatialPoints(lonlat))
plot(SpatialPoints(lonlat), axes = T)
library(sp)
library(rspat)
crdref = CRS('+proj=longlat +datum=WGS84')
lonlat = cbind(reruang$Latitud, reruang$Longitud)
pts = SpatialPoints(lonlat, proj4string = crdref)
plot(pts, axes = T)
model = glm(Suhu~Jumlah.Hujan.Mingguan, data = reruang)
model = glm(Suhu~Jumlah.Hujan.Mingguan, data = reruang)
summary(model)
library(UserNetR)
data("DHHS")
class(DHHS)
library(statnet)
degree(DHHS)
library(statnet)
degree(DHHS)
closeness(DHHS)
betweenness(DHHS)
bread
bread %>% filter('Transaction' == 'NONE')
library(dplyr)
bread %>% filter('Transaction' == 'NONE')
bread %ain% 'NONE'
v = sort(rowSums(m), decreasing = T)
# load data
dm1 = read.csv('./Data/data.DM1.csv')
dm2 = read.table('./Data/data.DM2.txt')
head(dm1)
colnames(dm1)
colnames(dm2)
data = merge(dm1, dm2, by.x = 'ID.Customer', by.y = 'cust.id')
head(data)
library(mice)
md.pattern(data)
table(data$Working)
table(data$Home.Status)
table(data$recent.move)
vehicle = median(data$num.vehicles, na.rm = T)
vehicle
data$Working = ifelse(is.na(data$Working), TRUE ,data$Working) #logical
data$Home.Status = ifelse(is.na(data$Home.Status), 'Homeowner with mortgage/loan',
data$Home.Status) # category
data$recent.move = ifelse(is.na(data$recent.move), FALSE,
data$recent.move) # logical
data$num.vehicles = ifelse(is.na(data$num.vehicles), vehicle,
data$num.vehicles) # integer
md.pattern(data)
library(dplyr)
# maklumat individu bekerja
data1 = data %>%
filter(Working == TRUE) %>%
select('state.of.res', 'age', 'Median.Income', 'marital.stat', 'Home.Status', 'sex')
# maklumat individu tidak bekerja
data2 = data %>%
filter(Working == FALSE) %>%
select('state.of.res', 'age', 'Median.Income', 'marital.stat', 'Home.Status', 'sex')
library(arules)
bread = read.transactions('./Data/BreadBasket.csv', format = 'single', header = T,
sep = ',', cols = c('Transaction','Item'))
arules::inspect(arules::unique(head(bread)))
#
itemFrequencyPlot(bread, topN = 10)
rule = apriori(bread, parameter=list(supp=0.01, conf=0.2))
rule = apriori(bread, parameter=list(supp=0.01, conf=0.2),
appearance=list(default='lhs', rhs='Coffee'))
library(arulesViz)
plot(rule, method = 'graph')
plot(rule, method = 'paracoord')
stesen = c('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H')
Latitud = c(45.3, 42.6, 38.9, 42.1, 35.7, 38.9, 36.2, 39)
Longitud = c(-116.7, -120.4, -116.7, -113.5, -115.5, 120.8, -119.5, -113.7)
Suhu = c(40.5, 32.1, 14.4, 40.1, 33.2, 27.4, 27.8, 31.3)
Jumlah.Hujan.Mingguan = c(184.85, 300.11, 3.53, 405.67, 94.78, 794.84, 154.67,
594.85)
reruang = data.frame(stesen, Latitud, Longitud, Suhu, Jumlah.Hujan.Mingguan)
head(reruang)
library(sp)
library(rspat)
crdref = CRS('+proj=longlat +datum=WGS84')
lonlat = cbind(reruang$Latitud, reruang$Longitud)
pts = SpatialPoints(lonlat, proj4string = crdref)
plot(pts, axes = T)
model = glm(Suhu~Jumlah.Hujan.Mingguan, data = reruang)
summary(model)
library(UserNetR)
data("DHHS")
class(DHHS)
library(statnet)
degree(DHHS)
closeness(DHHS)
betweenness(DHHS)
text = readLines('./Data/data.txt')
class(text)
library(tm)
docs=Corpus(VectorSource(text))
inspect(head(docs))
tospace = content_transformer(function(x, pattern) gsub(pattern, '', x))
doc2 = tm_map(docs, tospace, '!')
doc3 = tm_map(doc2, tospace, ':')
doc4 = tm_map(doc3, tospace, ',')
doc5 = tm_map(doc4, content_transformer(tolower))
doc6 = tm_map(doc5, removeNumbers)
doc7 = tm_map(doc6, removeWords, stopwords('english'))
doc8 = tm_map(doc7, removePunctuation)
doc9 = tm_map(doc8, stripWhitespace)
doc10 = tm_map(doc9, stemDocument)
dtm = TermDocumentMatrix(doc10)
m = as.matrix(dtm)
dim(m)
v = sort(rowSums(m), decreasing = T)
d = data.frame(word = names(v), freq = v)
library(wordcloud)
wordcloud(words = d$word, freq = d$freq, min.freq = 50, max.words = 25,
random.order = F, colors = brewer.pal(8, 'Dark2'))
dtm
m
head(m)
docs10
doc10
inspect(doc10)
