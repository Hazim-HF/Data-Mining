hist(discretize(Assault, 'equalfreq')$X)
barplot(discretize(Assault, 'equalfreq')$X)
barplot(table(discretize(Assault, 'equalfreq')$X))
barplot(table(discretize(Assault, 'equalfreq',4)$X))
barplot(table(discretize(Assault, 'equalfreq', 4)$X))
library(discretization)
install.packages('discretization')
library(discretization)
data(iris)
iris2 = chi2(iris, alp=0.05)$Disc.data
?chi2
?chi2
iris2 = chi2(iris, alp=0.05)$Disc.data
head(iris2)
data = read.csv('data.csv')
head(data)
data = read.csv('data.csv', sep=';')
head(data)
hist(data$expenditure)
exp_t = log(data$expenditure)
hist(exp_t)
hist(exp_t, main='Log of expenditure')
str(data)
str(data)
data$education_level = as.factor(data$education_level)
str(data)
data_lm = lm(log(expenditure)~income+education_level+work_experience, data=data)
summary(data_lm)
kewangan = read.table('Kewangan.D.txt')
head(kewangan)
table(kewangan$Bangsa)
table(kewangan$Bangsa)/length(kewangan$Bangsa)
sample_size = 3000
sm = sample_size * 0.6
sc = sample_size * 0.3
dm = subset(kewangan, Bangsa='Melayu')
dc = subset(kewangan, Bangsa='Cina')
di = subset(kewangan, Bangsa='India')
di
di = subset(kewangan, Bangsa='India')
dm = subset(kewangan, Bangsa=='Melayu')
di = subset(kewangan, Bangsa=='India')
di
nm = sample(nrow(dm), size=sm, replace=F)
?sample
nrow(d1)
nrow(di)
sample(16910, 0.6*3000)
nm
nm = sample(nrow(dm), size=sm, replace=F)
nc = sample(nrow(dc), size=sc, replace=F)
ni = sample(nrow(di), size=si, replace=F)
sample_size = 3000
sm = sample_size * 0.6
sc = sample_size * 0.3
si = sample_size * 0.1
dm = subset(kewangan, Bangsa=='Melayu')
dc = subset(kewangan, Bangsa=='Cina')
di = subset(kewangan, Bangsa=='India')
nm = sample(nrow(dm), size=sm, replace=F)
nc = sample(nrow(dc), size=sc, replace=F)
ni = sample(nrow(di), size=si, replace=F)
Sys.Date()
sample_data <- rnorm(60)
ts(sample_data, start=c(2020,2), frequency = 12)
dates_format <- read.csv('dates_formats3.csv', sep = ';')
head(dates_format)
attach(dates_format)
class(Japanese_format)
dates_format$Japanese_format <- as.Date(Japanese_format, format = "%d/%m/%Y")
dates_format
install.packages('USgas')
library(USgas)
data(package = 'USgas')
data(usgas)
ts.plot(usgas)
data(USVsales)
towel <- read.csv('towel.csv')
head(towel)
head(ts(towel))
ts.plot(ts(towel), main = 'Towel Daily Sales', xlab = 'Day', ylab = 'Towel')
lines(fitted(auto.arima(ts(towel))), col = 'red', lty = 2)
library(forecast)
Sys.Date()
sample_data <- rnorm(60)
ts(sample_data, start=c(2020,2), frequency = 12)
dates_format <- read.csv('dates_formats3.csv', sep = ';')
head(dates_format)
attach(dates_format)
class(Japanese_format)
dates_format$Japanese_format <- as.Date(Japanese_format, format = "%d/%m/%Y")
dates_format
library(USgas)
data(package = 'USgas')
data(usgas)
ts.plot(usgas)
data(USVsales)
towel <- read.csv('towel.csv')
head(towel)
head(ts(towel))
library(forecast)
ts.plot(ts(towel), main = 'Towel Daily Sales', xlab = 'Day', ylab = 'Towel')
lines(fitted(auto.arima(ts(towel))), col = 'red', lty = 2)
legend('bottomleft', 'Towel', col = 2, lty = 2)
auto.arima(ts(towel))
model <- arima(ts(towel), order = c(0,1,1))
summary(model)
f1 <- forecast(model)
f1
f2 <- forecast(auto.arima(ts(towel)))
f2
predict(auto.arima(ts(towel)), n.ahead = 10)
str(f1)
f1$lower[,1]
?forecast
identical(f1, f2)
identical(f1$, f2)
str(f1)
f1$lower[,1]
identical(f1, f2)
Sys.Date()
sample_data <- rnorm(60)
ts(sample_data, start=c(2020,2), frequency = 12)
dates_format <- read.csv('dates_formats3.csv', sep = ';')
head(dates_format)
attach(dates_format)
class(Japanese_format)
dates_format$Japanese_format <- as.Date(Japanese_format, format = "%d/%m/%Y")
dates_format
library(USgas)
data(package = 'USgas')
data(usgas)
ts.plot(usgas)
data(USVsales)
towel <- read.csv('towel.csv')
head(towel)
head(ts(towel))
library(forecast)
ts.plot(ts(towel), main = 'Towel Daily Sales', xlab = 'Day', ylab = 'Towel')
lines(fitted(auto.arima(ts(towel))), col = 'red', lty = 2)
legend('bottomleft', 'Towel', col = 2, lty = 2)
auto.arima(ts(towel))
model <- arima(ts(towel), order = c(0,1,1))
summary(model)
f1 <- forecast(model)
f1
f2 <- forecast(auto.arima(ts(towel)))
f2
predict(auto.arima(ts(towel)), n.ahead = 10)
str(f1)
f1$lower[,1]
identical(f1, f2)
load('sample2.RData')
str(sample2)
library(dtw)
dist(sample2, method = 'DTW')
hclust(dist(sample2, method = 'DTW'), method = 'average')
plot(hclust(dist(sample2, method = 'DTW'), method = 'average'))
eco_data <- read.csv('economic_data.csv', sep = ';')
head(eco_data)
eco_ts <- ts(eco_data[,2], start = c(2000,1), frequency = 12)
head(eco_ts)
plot.ts(eco_ts, main = 'Choii', xlab = 'Time', ylab = 'Economy')
eco_model <- auto.arima(eco_ts)
summary(eco_model)
fcst <- forecast(eco_model)
fcst
eco_U <- fcst$pred+0.69*fcst$se
fcst$pred
fcst$pred+0.69
fcst$se
fcst
str(fcst)
fcst <- forecast(eco_model)
fcst
?predict
?forecast
fcst <- predict(eco_model)
fcst
fcst <- predict(eco_model)
fcst <- forecast(eco_model)
fcst
eco_model <- auto.arima(eco_ts)
summary(eco_model)
fcst <- predict(eco_model)
class(eco_model)
fcst <- predict(eco_model)
is.null(eco_model)
eco_model <- auto.arima(eco_ts, n.ahead=10)
eco_model <- auto.arima(eco_ts)
eco_model <- auto.arima(eco_ts)
summary(eco_model)
plot(eco_ts, fcst$mean)
?forecast
library(dplyr)
data = custdata5 %>%
mutate(sex=as.factor(sex)) %>%
mutate(marital.stat=as.factor(marital.stat)) %>%
mutate(health.ins=as.factor(health.ins)) %>%
mutate(housing.type=as.factor(housing.type)) %>%
mutate(recent.move=as.factor(recent.move)) %>%
mutate(is.employed.fix1=as.factor(is.employed.fix1)) %>%
library(dplyr)
data = custdata5 %>%
mutate(sex=as.factor(sex)) %>%
mutate(marital.stat=as.factor(marital.stat)) %>%
mutate(health.ins=as.factor(health.ins)) %>%
mutate(housing.type=as.factor(housing.type)) %>%
mutate(recent.move=as.factor(recent.move)) %>%
mutate(is.employed.fix1=as.factor(is.employed.fix1))
custdata5 = read.csv('custdata5.csv', sep=';')
custdata5
str(custdata5)
custdata5 = read.csv('custdata5.csv', sep=';')
custdata5
str(custdata5)
library(dplyr)
data = custdata5 %>%
mutate(sex=as.factor(sex)) %>%
mutate(marital.stat=as.factor(marital.stat)) %>%
mutate(health.ins=as.factor(health.ins)) %>%
mutate(housing.type=as.factor(housing.type)) %>%
mutate(recent.move=as.factor(recent.move)) %>%
mutate(is.employed.fix1=as.factor(is.employed.fix1))
par(mfrow=c(1,3))
hist(mdata$crim)
library(mice)
mdata = read.csv('MData.csv', sep=';')
head(mdata)
md.pattern(mdata)
mdata2 = mdata[complete.cases(mdata),]
mdata[!complete.cases(mdata),]
mdata$indus
#edit(mdata$indus)
mdata
median(mdata$crim, na.rm=T)
mdata$crim = ifelse(is.na(mdata$crim), median(mdata$crim, na.rm=T), mdata$crim)
mdata
par(mfrow=c(1,3))
hist(mdata$crim)
hist(mdata$indus)
hist(mdata$medv)
iris_mis1 = read.csv('iris.mis1.csv')
library(multiUS)
?knn
?KNNimp
iris_knn = KNNimp(data=iris_mis1, k=10)
iris_knn
iris_mis1 = read.csv('iris.mis1.csv')
iris_mis1
library(multiUS)
iris_knn = KNNimp(data=iris_mis1, k=10)
iris_knn
airquality = read.table('airquality.txt')
airquality = read.table('airquality.txt')
md.pattern(airquality)
library(mice)
md.pattern(airquality)
airquality
impdata = mice(airquality, m=5, meth='pmm')
md.pattern(impdata)
?mice
completedata = complete(impdata)
completedata
md.pattern(completedata)
completedata
dat2 = read.csv('dat2.csv')
dat2
md.pattern(dat2)
str(dat2)
dat2$Gender = as.factor(dat2$Gender)
dat2 = dat2 %>%
mutate(Gender=as.factor(Gender)) %>%
mutate(Smoking=as.factor(Smoking)) %>%
mutate(Education=as.factor(Education))
library(dplyr)
dat2 = dat2 %>%
mutate(Gender=as.factor(Gender)) %>%
mutate(Smoking=as.factor(Smoking)) %>%
mutate(Education=as.factor(Education))
str(dat2)
data = read.csv('FACars.csv')
data
colnames(data)
str(data)
z_score = scale(data)
library(corrplot)
corrplot(cor(z_score, order='hclust'))
library(corrplot)
corrplot(cor(z_score, order='hclust'))
corrplot(cor(z_score), order='hclust')
scree(z_score)
apropos('scree')
library(psych)
scree(z_score)
cor(z)
cor(z_score)
fa = factanal(z_score, factors=7, rotation='varimax')
fa
fa = factanal(z_score, factors=7, rotation='varimax')
fa
fa2
fa2
fa2 = factanal(z_score, factors=2, scores='regression', rotation='varimax')
fa2
1 = c('Buku')
a = c('Buku', 'Pen', 'Roti', 'Susu', 'Gula')
b = c('Roti', 'Gula', 'Lampin', 'Soda', 'Telur')
c = c('Susu', 'Lampin', 'Gula', 'Soda', 'Minyak Masak')
d = c('Roti', 'Susu', 'Lampin', 'Soda', 'Buku', 'Pen')
e = c('Roti', 'Susu', 'Lampin', 'Gula', 'Buku')
data2 = data.frame('1'=a, '2'=b)
data2
data2 = data.frame('1'=a, '2'=b, '3'=c, '4'=d, '5'=e)
data2 = data.frame('1'=a, '2'=b, '3'=c, '4'=d, '5'=e)
a = c('Buku', 'Pen', 'Roti', 'Susu', 'Gula')
b = c('Roti', 'Gula', 'Lampin', 'Soda', 'Telur')
c = c('Susu', 'Lampin', 'Gula', 'Soda', 'Minyak Masak')
d = c('Roti', 'Susu', 'Lampin', 'Soda', 'Buku', 'Pen')
e = c('Roti', 'Susu', 'Lampin', 'Gula', 'Buku')
data2 = data.frame('1'=a, '2'=b, '3'=c, '4'=d, '5'=e)
data2
data2 = NULL
data2
data2 = data.frame('1'=a, '2'=b, '3'=c, '4'=d, '5'=e)
data2
data2 = data.frame('1'=a, '2'=b, '3'=c, '4'=d, '5'=e)
a = c('Buku', 'Pen', 'Roti', 'Susu', 'Gula', NA)
b = c('Roti', 'Gula', 'Lampin', 'Soda', 'Telur', NA)
c = c('Susu', 'Lampin', 'Gula', 'Soda', 'Minyak Masak')
d = c('Roti', 'Susu', 'Lampin', 'Soda', 'Buku', 'Pen')
e = c('Roti', 'Susu', 'Lampin', 'Gula', 'Buku', NA)
data2 = data.frame('1'=a, '2'=b, '3'=c, '4'=d, '5'=e)
data2
data2 = data.frame('1'=a, '2'=b, '3'=c, '4'=d, '5'=e)
a = c('Buku', 'Pen', 'Roti', 'Susu', 'Gula', NA)
b = c('Roti', 'Gula', 'Lampin', 'Soda', 'Telur', NA)
c = c('Susu', 'Lampin', 'Gula', 'Soda', 'Minyak Masak', NA)
d = c('Roti', 'Susu', 'Lampin', 'Soda', 'Buku', 'Pen')
e = c('Roti', 'Susu', 'Lampin', 'Gula', 'Buku', NA)
data2 = data.frame('1'=a, '2'=b, '3'=c, '4'=d, '5'=e)
data2
head(data)
library(arules)
itemFrequencyPlot(data2)
rule1 = apriori(data2, parameter=list(supp=0.01))
rule1
inspect(rule1)
apropos('transaction')
data2 = transactions('1'=a, '2'=b, '3'=c, '4'=d, '5'=e)
data2 = data.frame('1'=a, '2'=b, '3'=c, '4'=d, '5'=e)
data2 = data.frame('1'=a, '2'=b, '3'=c, '4'=d, '5'=e)
transactions(data2)
itemFrequencyPlot(data2_t)
data2_t = transactions(data2)
itemFrequencyPlot(data2_t)
class(data2_t)
data2 = data.frame('A'=a, 'B'=b, 'C'=c, 'D'=d, 'E'=e)
data2_t = transactions(data2)
?read.transaction
?read.transactions
?transactions
data2_t
inspect(data2_t
inspect(data2_t)
inspect(data2_t)
LIST(data2_t)
itemFrequencyPlot(data2_t, topN=3, main='3 Item yang Paling Kerap Dibeli')
data2 = data.frame(a,b,c,d,e)
data2_t = transactions(data2)
inspect(data2_t)
?read.transactions
data2 <- paste(
"# this is some test data",
"Buku, Pen, Roti, Susu, Gula",
"Roti, Gula, Lampin, Soda, Telur",
"Susu, Lampin, Gula, Soda, Minyak Masak",
"Roti, Susu, Lampin, Soda, Buku, Pen",
"Roti, Susu, Lampin, Gula, Buku",
sep = "\n"
)
cat(data2)
write(data2, file='question2.txt')
tr = read.transactions('question2.txt', format='basket', sep=',', skip=1)
inspect(tr)
itemFrequencyPlot(tr, topN=3)
data2 <- paste(
"Buku, Pen, Roti, Susu, Gula",
"Roti, Gula, Lampin, Soda, Telur",
"Susu, Lampin, Gula, Soda, Minyak Masak",
"Roti, Susu, Lampin, Soda, Buku, Pen",
"Roti, Susu, Lampin, Gula, Buku",
sep = "\n"
)
cat(data2)
write(data2, file='question2.txt')
tr = read.transactions('question2.txt', format='basket', sep=',')
itemFrequencyPlot(tr, topN=3)
data2 <- paste(
"Buku, Pen, Roti, Susu, Gula",
"Roti, Gula, Lampin, Soda, Telur",
"Susu, Lampin, Gula, Soda, Minyak Masak",
"Roti, Susu, Lampin, Soda, Buku, Pen",
"Roti, Susu, Lampin, Gula, Buku",
sep = "\n"
)
cat(data2)
write(data2, file='question2.txt')
tr = read.transactions('question2.txt', format='basket', sep=',')
library(arules)
itemFrequencyPlot(tr, topN=3)
rule1 = apriori(tr, parameter=list(supp=0.01))
inspect(rule1)
library(arules)
itemFrequencyPlot(tr, topN=3, main='3 Item yang Paling Kerap Dibeli')
library(arules)
itemFrequencyPlot(tr, topN=5, main='3 Item yang Paling Kerap Dibeli')
itemFrequencyPlot(tr, topN=10, main='3 Item yang Paling Kerap Dibeli')
library(arules)
itemFrequencyPlot(tr, topN=3, main='3 Item yang Paling Kerap Dibeli')
library(psych)
scree(z_score)
fa6 = factanal(z_score, factors=6, rotation='varimax')
fa6
fa6 = factanal(z_score, factors=8, rotation='varimax')
fa6
fa = factanal(z_score, factors=7, rotation='varimax')
fa
library(corrplot)
corrplot(cor(z_score), order='hclust')
z_score = scale(data)
z_score
fa2 = factanal(z_score, factors=2, scores='regression', rotation='varimax')
fa2
fa2 = factanal(z_score, factors=7, scores='regression', rotation='varimax')
fa2
factanal(z_score, factors=6, rotation='varimax')
fa6 = factanal(z_score, factors=6, scores='regression', rotation='varimax')
fa6
fa7 = factanal(z_score, factors=7, scores='regression', rotation='varimax')
fa7
?read.transactions
?read.transactions
library(TraMineR)
data("mvad")
mvad
mvad.labels=c('employment', 'further education', 'higher education', 'joblessness', 'school', 'training')
mvad.scode = c('EM', 'FE', 'HE', 'JL', 'SC', 'TR')
mvad.seq = seqdef(mvad, states=mvad.scode, labels = mvad.labels, xstep=6)
mvad.seq = seqdef(mvad, states=mvad.scode, labels = mvad.labels, xstep=6)
mvad.seq
mvad.seq = seqdef(mvad, 15:86, states=mvad.scode, labels = mvad.labels, xstep=6)
mvad.seq
seqfplot(mvad.seq, idxs=1:20)
seq(mvad.deq, border=NA, main='Plot taburan keadaan')
seq(mvad.seq, border=NA, main='Plot taburan keadaan')
seqdplot(mvad.seq, border=NA, main='Plot taburan keadaan')
seqmeant(mvad.seq)
seqmeant(mvad.seq)
seqmsplot(mvad.seq)
seqdplot(mvad.seq, border=NA, main='Plot taburan keadaan')
seqHtplot(mvad.seq)
seqHtplot(mvad.seq, main='entropi rentas lintang')
windows(10,10)
seqmsplot(mvad.seq)
mvad.seq = seqecreate(mvad.seq)
mvad.seq = seqecreate(mvad.seq)
mvad.seqe = seqecreate(mvad.seq)
mvad.seqe = seqecreate(mvad.seq)
mvad.seqe = seqecreate(mvad.seq)
mvad.seqe = seqecreate(mvad.seq)
mvad.labels=c('employment', 'further education', 'higher education', 'joblessness', 'school', 'training')
mvad.scode = c('EM', 'FE', 'HE', 'JL', 'SC', 'TR')
mvad.seq = seqdef(mvad, 15:86, states=mvad.scode, labels = mvad.labels, xstep=6)
mvad.seq
mvad.seqe = seqecreate(mvad.seq)
fsubseq = seqefsub(mvad.seqe, pmin.support=0.05)
plot(fsubseq[1:15], col='blue')
plot(fsubseq[1:15], col='turqoise')
plot(fsubseq[1:15], col='yellow')
library(cluster)
submat = seqsubm(mvad.seq, method='TRATE')
dist.om = seqdist(mvad.seq, method='OM', sm=submat)
submat = seqsubm(mvad.seq, method='TRATE')
dist.om = seqdist(mvad.seq, method='OM', sm=submat)
dist.om
clusterward = agnes(dist.om, diss='T', method='ward')
plot(clusterward)
cl.4 = cutree(clusterward)
cl.4 = cutree(clusterward, k=4)
plot(cl.4)
cl.4fac = factor(cl.4)
cl.4fac = factor(cl.4, labels='Type', 1:4)
cl.4 = cutree(clusterward, k=4)
cl.4fac = factor(cl.4, labels='Type', 1:4)
cl.4fac = factor(cl.4, labels=paste('Type', 1:4))
cl.4fac
cl.4fac = factor(cl.4, labels=paste('Kumpulan', 1:4))
cl.4fac
seqfplot(mvad.seq, group=cl.4fac, main='10 Jujukan yang paling kerap berlaku',idxs=1:10)
seqfplot(mvad.seq, group=cl.4fac, main='10 Jujukan yang paling kerap berlaku',idxs=1:10)
seqfplot(mvad.seq, group=cl.4fac, main='10 Jujukan yang paling kerap berlaku',idxs=1:10)
seqdplot(mvad.seq, group=cl.4fac, border=NA, main='Plot taburan keadaan')
seqfplot(mvad.seq, group=cl.4fac, main='10 Jujukan yang paling kerap berlaku',idxs=1:10)
seqHtplot(mvad.seq, group=cl.4fac, main='entropi rentas lintang')
seqfplot(mvad.seq, group=cl.4fac, main='10 Jujukan yang paling kerap berlaku',idxs=1:10)
seqfplot(mvad.seq, group=cl.4fac, main='10 Jujukan yang paling kerap berlaku',idxs=1:10)
disc = seqecmpgrop(fsbuseq, grop=cl.4fac)
disc = seqecmpgroup(fsbuseq, grop=cl.4fac)
disc = seqecmpgroup(fsbuseq, group=cl.4fac)
disc = seqecmpgroup(fsubseq, group=cl.4fac)
plot(disc[1:6])
