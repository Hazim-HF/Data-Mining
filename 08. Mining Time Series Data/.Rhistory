Sys.Date()
sample_data <- rnorm(60)
ts(sample_data, start=c(2020,2), frequency = 12)
sample_data <- rnorm(60)
sample_data <- rnorm(60)
ts(sample_data, start=c(2020,2), frequency = 12)
dates_format <- read.csv('./Data/dates_formats3.csv', sep = ';')
head(dates_format)
attach(dates_format)
class(Japanese_format)
dates_format$Japanese_format <- as.Date(Japanese_format, format = "%d/%m/%Y")
dates_format
library(USgas)
data(package = 'USgas')
data(usgas)
ts.plot(usgas)
data(USVsales)
data(package = 'USgas')
ts.plot(usgas)
class(usgas)
str(usgas)
usgas
unique(usgas$process)
unique(usgas$state)
unique(usgas$state_abb)
towel <- read.csv('./Data/towel.csv')
head(towel)
head(ts(towel))
library(forecast)
ts.plot(ts(towel), main = 'Towel Daily Sales', xlab = 'Day', ylab = 'Towel')
lines(fitted(auto.arima(ts(towel))), col = 'red', lty = 2)
legend('bottomleft', 'Towel', col = 2, lty = 2)
auto.arima(ts(towel))
ts.plot(usgas)
towel <- read.csv('./Data/towel.csv')
head(towel)
# convert into time series data
towel.ts = ts(towel)
# convert into time series data
towel.ts = ts(towel)
plot.ts(towel.ts)
# do differencing to achieve stationary
towel.dif = diff(towel.ts)
plot.ts(towel.dif)
par(mfrow=c(1,2))
acf(towel.dif)
pacf(towel.dif)
par(mfrow=c(1,2))
acf(towel)
pacf(towel)
par(mfrow=c(1,2))
acf(towel.ts)
pacf(towel.ts)
tsdiag(auto.arima(towel.ts))
tsdiag(auto.arima(towel.ts))
tsdiag(auto.arima(towel.ts))
tsdiag(auto.arima(towel.ts))
hist(residuals(auto.arima(towel.ts)))
hist(residuals(auto.arima(towel.ts)), main = 'Histogram of Residuals',
col = 'aquamarine4', xlab = 'Residuals')
?auto.arima
load('./Data/sample2.RData')
str(sample2)
model1$p
model1 = arima(monthly, c(1,0,0), seasonal=list(order=c(0,0,0)))
library(forecast)
data("AirPassengers")
plot(decompose(AirPassengers))
seq_down <- seq(.625, .125, -0.125)
seq_up <- seq(0, 1.5, 0.25)
y <- c(seq_down, seq_up, seq_down + .75, seq_up + .75, seq_down + 1.5,
seq_up + 1.5)
par(mfrow = c(1, 3))
plot(y, type = "b", ylim = c(-.1, 3))
plot(diff(y), ylim = c(-.1, 3), xlim = c(0, 36))
plot(diff(diff(y), lag = 12), ylim = c(-.1, 3), xlim = c(0, 36))
par(mfrow = c(1, 1))
par(mfrow=c(1,2))
acf(y)
pacf(y)
library(lubridate) # year, month
library(dplyr) # %>%
library(forecast) # auto.arima
cycle = read.csv('./Data/Ch6_ridership_data_2011-2012.csv')
str(data)
library(dplyr)
library(lubridate)
cycle$datetime = as.Date(cycle$datetime, format = '%Y-%m-%d')
str(cycle)
monthly_ride = cycle %>%
group_by(year = year(datetime), month = month(datetime)) %>%
summarise(riders = sum(count))
table(monthly_ride$year, monthly_ride$month)
riders = monthly_ride[,3]
monthly = ts(riders, frequency = 12, start = c(2011,1))
class(monthly)
monthly
plot(decompose(monthly))
plot(monthly)
y=diff(monthly)
plot(y)
z=diff(diff(monthly), lag =12)
plot(z)
par(mfrow=c(1,2))
acf(monthly)
pacf(monthly)
model1$p
model1 = arima(monthly, c(1,0,0), seasonal=list(order=c(0,0,0)))
model2 = arima(monthly, c(1,1,0), seasonal=list(order=c(0,0,0)))
model3 = arima(monthly, c(2,1,0), seasonal=list(order=c(0,0,0)))
model4 = arima(monthly, c(1,1,0), seasonal=list(order=c(0,1,0)))
model5 = arima(monthly, c(0,1,1), seasonal=list(order=c(0,0,0)))
model1$aic
model1$p
str(model1)
str(auto.arima(monthly))
par(mfrow=c(1,3))
acf(auto.arima(monthly))
str(auto.arima(monthly))
par(mfrow=c(1,3))
acf(monthly)
hist(auto.arima(monthly))
hist(residuals(auto.arima(monthly)))
auto.arima(monthly)
yr_forecast = forecast(monthly, h=12)
plot(yr_forecast)
